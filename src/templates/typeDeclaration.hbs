import falso from '@ngneat/falso';

{{!-- Импорт основной DTO --}}
// Импортируем основное DTO
import type { {{{typeFileName}}} } from '{{{pathToTypeFile}}}';

{{!-- Импорт генераторов --}}
{{#if hasImports}}
    // Импортируем генераторы, вложенные в это DTO
    {{#each generatorsImports}}
        import { generator as $generator{{{this.aliasName}}} } from '{{{this.path}}}';
    {{/each}}
{{/if}}


// Моковый гененратор для {{{typeFileName}}}
const generateOne = (body?: Partial<{{{typeFileName}}}>): {{{typeFileName}}} => ({
{{#if intersections}}
    // Указываем пересечения
    {{#each intersections}}
        ...$generator{{{this}}}.generateOne(),
    {{/each}}
{{/if}}
// Основные свойства
{{#each declarations}}
    {{{this.name}}}: {{{this.value}}},
{{/each}}
...(body ? body : {})
} as {{{typeFileName}}});

// Множественный моковый гененратор для {{{typeFileName}}}
const generateCollection = (amount: number = falso.randNumber({min: 1, max: 10})): Array<{{{typeFileName}}}> => (new Array(amount).map(generateOne)) as Array<{{{typeFileName}}}>

export const generator = {
    generateOne,
    generateCollection
};